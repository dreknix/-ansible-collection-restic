---

- name: Create restic user
  become: true
  ansible.builtin.user:
    name: "{{ restic_user_name }}"
    uid: "{{ restic_user_id | default(omit) }}"
    shell: "/usr/sbin/nologin"
    comment: Restic backup user
    password_lock: true
    create_home: true
    system: true
    ssh_key_type: ed25519
    ssh_key_comment: "restic on {{ inventory_hostname }}"
    ssh_key_passphrase: ""
    generate_ssh_key: true
    state: present
  register: restic_user

- name: Configure restic group
  become: true
  ansible.builtin.group:
    name: "{{ restic_user_name }}"
    gid: "{{ restic_user_id | default(omit) }}"
    state: present

- name: Add restic public key
  become: true
  ansible.posix.authorized_key:
    user: "{{ restic_user['name'] }}"
    key: "{{ restic_user['ssh_public_key'] }}"
    state: present
  when: not restic_user['failed']
  no_log: true

- name: Retrieve private key
  become: true
  ansible.builtin.command: cat {{ restic_user['ssh_key_file'] }}
  changed_when: false
  register: restic_key
  no_log: true

- name: Configure restic chroot directory
  become: true
  ansible.builtin.file:
    path: "{{ restic_backup_dir }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: Configure restic target directory
  become: true
  ansible.builtin.file:
    path: "{{ restic_backup_dir }}/{{ restic_target_dir }}"
    state: directory
    owner: "{{ restic_user['name'] }}"
    group: "{{ restic_user['name'] }}"
    mode: "u=rwx,go=rx"

- name: Install package 'openssh-server'
  become: true
  ansible.builtin.apt:
    name:
      - openssh-server
    state: present

- name: Ensure ssh_config.d config files is enabled
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^\\s*#?\\s*Include\\s+/etc/ssh/sshd_config.d/\\*.conf"
    line: "Include /etc/ssh/sshd_config.d/*.conf"
  register: sshd_config

- name: Configure sshd
  become: true
  ansible.builtin.template:
    src: ansible-sshd-restic.conf.j2
    dest: /etc/ssh/sshd_config.d/10-ansible-sshd-restic.conf
    owner: root
    group: root
    mode: "u=rw,go=r"
  register: sshd_restic_config

- name: Restart sshd
  ansible.builtin.service:
    name: sshd
    state: restarted
  when: sshd_config.changed or sshd_restic_config.changed

...
